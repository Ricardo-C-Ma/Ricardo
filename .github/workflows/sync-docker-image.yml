# ======================================================================
# 工作流名称：同步 Docker 镜像到阿里云个人版 ACR
# 配置说明：每个项目独立仓库，共享同一个 ACR 命名空间
# 修复问题：第48行变量引用错误
# ======================================================================
name: Sync Docker Images to Personal ACR

on:
  schedule:
    - cron: '0 2 * * *'  # UTC 时间每天凌晨2点 (北京时间上午10点)
  workflow_dispatch:

# 全局环境变量
env:
  ACR_REGISTRY: crpi-mvnxnutpj57cigam.cn-hangzhou.personal.cr.aliyuncs.com
  ACR_NAMESPACE: ricardolerry

jobs:
  # 任务 1: DeepLabCut
  sync-deeplabcut:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 修复：使用固定项目名称作为仓库名
        project: ["deeplabcut"]
        image: ["deeplabcut/deeplabcut"]
        tag: [
          "latest-jupyter", "latest-core",
          "latest-jupyter-cuda12.4-cudnn9", "3.0.0-jupyter-cuda12.4-cudnn9",
          "latest-core-cuda12.4-cudnn9", "3.0.0-core-cuda12.4-cudnn9",
          "latest-base-cuda12.4-cudnn9", "3.0.0-base-cuda12.4-cudnn9",
          "latest-jupyter-cuda12.1-cudnn9", "3.0.0-jupyter-cuda12.1-cudnn9",
          "latest-core-cuda12.1-cudnn9", "3.0.0-core-cuda12.1-cudnn9",
          "latest-base-cuda12.1-cudnn9", "3.0.0-base-cuda12.1-cudnn9"
        ]
    
    steps:
    # 第一步：登录 Docker Hub（关键修复）
     - name: Login to Docker Hub
       run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          --username "${{ secrets.DOCKERHUB_USERNAME }}" \
          --password-stdin \
          docker.io
      
      # 第二步：登录阿里云 ACR
      - name: Login to Alibaba Cloud ACR
        run: |
          docker login -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }} \
          ${{ env.ACR_REGISTRY }}
            
      - name: Pull Docker Image
        run: docker pull ${{ matrix.image }}:${{ matrix.tag }}
      
      # 修复：第48行 - 直接使用 matrix.project 作为仓库名
      - name: Tag Image for Personal ACR
        run: |
          docker tag ${{ matrix.image }}:${{ matrix.tag }} \
          ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}
      
      - name: Push to Personal ACR
        run: |
          docker push ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}

  # 任务 2: DeepEthogram
  sync-deepethogram:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["deepethogram"]
        image: ["jbohnslav/deepethogram"]
        tag: ["headless", "gui", "full"]
    steps:
     - name: Login to Docker Hub
       run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          --username "${{ secrets.DOCKERHUB_USERNAME }}" \
          --password-stdin \
          docker.io
      
      # 第二步：登录阿里云 ACR
      - name: Login to Alibaba Cloud ACR
        run: |
          docker login -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }} \
          ${{ env.ACR_REGISTRY }}
            
      - name: Pull Docker Image
        run: docker pull ${{ matrix.image }}:${{ matrix.tag }}
      
      - name: Tag Image for Personal ACR
        run: |
          docker tag ${{ matrix.image }}:${{ matrix.tag }} \
          ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}
      
      - name: Push to Personal ACR
        run: |
          docker push ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}

  # 任务 3: MONAI
  sync-monai:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["monai"]
        image: ["projectmonai/monai"]
        tag: ["latest", "1.5.0", "1.5.0rc1"]
    steps:
      # 第一步：登录 Docker Hub（关键修复）
     - name: Login to Docker Hub
       run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          --username "${{ secrets.DOCKERHUB_USERNAME }}" \
          --password-stdin \
          docker.io
      
      # 第二步：登录阿里云 ACR
      - name: Login to Alibaba Cloud ACR
        run: |
          docker login -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }} \
          ${{ env.ACR_REGISTRY }}
            
      - name: Pull Docker Image
        run: docker pull ${{ matrix.image }}:${{ matrix.tag }}
      
      - name: Tag Image for Personal ACR
        run: |
          docker tag ${{ matrix.image }}:${{ matrix.tag }} \
          ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}
      
      - name: Push to Personal ACR
        run: |
          docker push ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}

  # 任务 4: Jupyter DataScience
  sync-jupyter-datascience:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["jupyter-datascience"]
        image: ["jupyter/datascience-notebook"]
        tag: [
          "801ca2b", "x86_64-ubuntu-22.04",
          "x86_64-r-4.3.1", "x86_64-python-3.11.6",
          "x86_64-notebook-7.0.6", "x86_64-latest",
          "x86_64-lab-4.0.7", "x86_64-hub-4.0.2"
        ]
    steps:
     # 第一步：登录 Docker Hub（关键修复）
     - name: Login to Docker Hub
       run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          --username "${{ secrets.DOCKERHUB_USERNAME }}" \
          --password-stdin \
          docker.io
      
      # 第二步：登录阿里云 ACR
      - name: Login to Alibaba Cloud ACR
        run: |
          docker login -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }} \
          ${{ env.ACR_REGISTRY }}
            
      - name: Pull Docker Image
        run: docker pull ${{ matrix.image }}:${{ matrix.tag }}
      
      - name: Tag Image for Personal ACR
        run: |
          docker tag ${{ matrix.image }}:${{ matrix.tag }} \
          ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}
      
      - name: Push to Personal ACR
        run: |
          docker push ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:${{ matrix.tag }}

  # 任务 5: Jupyter NBViewer (单标签特殊处理)
  sync-jupyter-nbviewer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["jupyter-nbviewer"]
    steps:
   # 第一步：登录 Docker Hub（关键修复）
    - name: Login to Docker Hub
      run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
          --username "${{ secrets.DOCKERHUB_USERNAME }}" \
          --password-stdin \
          docker.io
      
      # 第二步：登录阿里云 ACR
      - name: Login to Alibaba Cloud ACR
        run: |
          docker login -u ${{ secrets.ACR_USERNAME }} \
          -p ${{ secrets.ACR_PASSWORD }} \
          ${{ env.ACR_REGISTRY }}
            
      - name: Pull Docker Image
        run: docker pull jupyter/nbviewer:801ca2b
      
      - name: Tag Image for Personal ACR
        run: |
          docker tag jupyter/nbviewer:801ca2b \
          ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:801ca2b
      
      - name: Push to Personal ACR
        run: |
          docker push ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/${{ matrix.project }}:801ca2b

# ======================================================================
# 修复说明：
# 1. 移除了有问题的全局 REPO_NAME 变量
# 2. 直接在任务中使用 matrix.project 作为仓库名
# 3. 简化了标签处理逻辑
# 4. 优化了矩阵定义格式，提高可读性
#
# 现在每个项目将有自己的仓库：
#   deeplabcut → crpi-mvnxnutpj57cigam.cn-hangzhou.personal.cr.aliyuncs.com/ricardolerry/deeplabcut
#   deepethogram → crpi-mvnxnutpj57cigam.cn-hangzhou.personal.cr.aliyuncs.com/ricardolerry/deepethogram
# 
# ======================================================================
